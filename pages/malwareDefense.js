// pages/malwareDefense.js
export function init() {
    console.log('🔧 malwareDefense.init()');

    // ─── GLOBAL ID LOOKUPS ────────────────────────────────────────
    const container = document.getElementById('malware-defense');
    const quickBtn = document.getElementById('md-quick');
    const fullBtn = document.getElementById('md-full');
    const folderBtn = document.getElementById('md-folder-btn');
    const folderInput = document.getElementById('md-folder-input');
    const output = document.getElementById('md-output');
    const progressWrap = document.querySelector('#malware-defense .progress-container');
    const progressFill = document.querySelector('#malware-defense .progress-fill');

    console.log('  refs →', {
        quickBtn: !!quickBtn,
        fullBtn: !!fullBtn,
        folderBtn: !!folderBtn,
        folderIn: !!folderInput,
        progWrap: !!progressWrap,
        progFill: !!progressFill
    });

    // ─── PROGRESS HELPERS ─────────────────────────────────────────
    function startProgress(duration) {
        console.log('▶️ startProgress(', duration, ')');
        container.classList.add('md-scanning');
        progressWrap.classList.remove('hidden');
        progressFill.style.animation = 'none';
        void progressFill.offsetWidth;
        progressFill.style.animation = `fillProgress ${duration} linear forwards`;
    }
    function stopProgress() {
        console.log('⏹️ stopProgress');
        container.classList.remove('md-scanning');
        progressWrap.classList.add('hidden');
    }

    // ─── CORE SCAN LOGIC ──────────────────────────────────────────
    async function handleMode(mode, target) {
        console.log('🟢 handleMode(', mode, target, ')');
        output.textContent = '';
        container.classList.add('loading');

        startProgress('2s');  // instant starter

        let secs = 30;
        try {
            secs = await window.defenderAPI.getScanEstimate(mode, target);
            console.log('📏 estimatedSecs =', secs);
        } catch (e) {
            console.warn('⚠️ estimate failed:', e);
        }
        startProgress(`${secs}s`);

        try {
            const res = mode === 'folder'
                ? await window.defenderAPI.run('folder', target)
                : await window.defenderAPI.run(mode);
            console.log('✅ scan result:', res.trim());
        } catch (err) {
            console.error('❌ scan failed:', err);
        }

        progressFill.addEventListener('animationend', () => {
            console.log('🎬 animationend');
            stopProgress();
            output.textContent = '✅ Scan complete!';
            container.classList.remove('loading');
        }, { once: true });
    }

    // ─── BUTTON WIRING ────────────────────────────────────────────
    function attach(mode, btn) {
        console.log('  attach:', mode, btn);
        if (!btn) {
            console.warn(`   → no element for mode "${mode}"`);
            return;
        }
        btn.addEventListener('click', () => {
            console.log(`👇 button click: ${mode}`);
            if (mode === 'folder') folderInput.click();
            else handleMode(mode);
        });
    }
    attach('quick', quickBtn);
    attach('full', fullBtn);
    attach('folder', folderBtn);

    // ─── FOLDER PICKER ─────────────────────────────────────────────
    folderInput.addEventListener('change', () => {
        const file = folderInput.files[0];
        console.log('📂 folder selected:', file && file.path);
        if (file) handleMode('folder', file.path);
    });
}
